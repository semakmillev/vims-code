openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"

servers:
  - url: /

paths:
  /server/api/login:
    post:
      tags:
        - auth
      description: user login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        200:
          description: Authentification completed

  /server/api/register:
    post:
      tags:
        - auth
      description: register new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        200:
          description: Created
  /server/api/team:
    post:
      tags:
        - auth
      description: create new team
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_caption:
                  type: string
                  example: "my team"
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
  /server/api/player_teams:
    get:
      tags:
        - auth
      description: list of player teams
      security:
          - ApiKeyAuth: [ ]
      responses:
        200:
          description:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
  schemas:
    GameInfo:
      type: object
      properties:
        id:
          type: integer
          example: -1
        game_state:
          type: string
          example: 'CREATED'
        game_type:
          type: string
          example: null
        caption:
          type: string
          example: 'My Game'
        game_yaml:
          type: string
        creation_date:
          type: string
          format: dateTime

    RegisterBody:
      type: object
      required:
        - login
        - pwd
        - company_id
        - user_type
      properties:
        login:
          type: string
          example: author
        pwd:
          type: string
          example: 12345
        email:
          type: string
          example: null
    LoginBody:
      type: object
      required:
        - login
        - pwd
      properties:
        login:
          type: string
          example: author
        pwd:
          type: string
          example: "12345"
    ChangePasswordBody:
      type: object
      required:
        - pwd
      properties:
        pwd:
          type: string
          example: "12345"
    DefaultResponse:
      type: object
      required:
        - res
        - error
        - comments
      properties:
        res:
          type: string
          description: "usualy empty string"
        error:
          type: string
          description: "0 if ok, 1 if fail"
        comments:
          type: string
          description: "empty string if ok else - error description"

